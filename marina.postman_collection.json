{
	"info": {
		"_postman_id": "de4f6603-5526-43cd-935e-f8cb7becbf29",
		"name": "final",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add boat 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.environment.set(\"boat_id\", pm.response.json()[\"id\"]);",
							"pm.environment.set(\"owner\", pm.response.json()[\"owner\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Odyssey\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Yatch\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "add boat invalid auth 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "add boat missing auth 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get boats 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"At least one boat exists\", function(){",
							"   pm.expect(Object.keys(pm.response.json()).length).to.be.at.least(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get single boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Odyssey\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Yatch\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user boats 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/users/{{owner}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users",
						"{{owner}}",
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user boat invalid JWT 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/users/{{owner}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users",
						"{{owner}}",
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "put edit boat 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94ceda46-25de-4be1-becf-a55334b30052",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Peanut\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Skipper\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(42);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Peanut\",\r\n  \"type\": \"Skipper\",\r\n  \"length\": 42\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put edit boat invalid 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94ceda46-25de-4be1-becf-a55334b30052",
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Peanut\",\r\n  \"type\": \"Skipper\",\r\n  \"length\": 42\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch edit boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94ceda46-25de-4be1-becf-a55334b30052",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Peanut\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Skipper\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Peanut\",\r\n  \"type\": \"Skipper\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add load 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.environment.set(\"load_id\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Dreams\");",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(99);",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Fragile\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"content\": \"Dreams\",\r\n  \"transport\": \"Fragile\",\r\n  \"weight\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get loads 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"At least one load exists\", function(){",
							"   pm.expect(Object.keys(pm.response.json()).length).to.be.at.least(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads"
					]
				}
			},
			"response": []
		},
		{
			"name": "get single load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Dreams\");",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(99);",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Fragile\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put edit load 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"303 status code\", function () {\r",
							"    pm.response.to.have.status(303);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Candy\");\r",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(8);\r",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Hard\");\r",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"content\": \"Candy\",\r\n  \"transport\": \"Hard\",\r\n  \"weight\": 8\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch edit load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"content is valid\", function () {\r",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Candy\");\r",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(9);\r",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Hard\");\r",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];\r",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"weight\": 9\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "load is added to ship 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00b996e8-52af-4a08-8ce2-22097177a90f",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "load added again 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00b996e8-52af-4a08-8ce2-22097177a90f",
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get load has carrier 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Candy\");",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(9);",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Hard\");",
							"    pm.expect(pm.response.json()).to.have.property(\"carrier\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "load is removed from ship 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00b996e8-52af-4a08-8ce2-22097177a90f",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}",
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get boat no load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Peanut\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Skipper\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    pm.expect(pm.response.json()).to.not.have.property(\"loads\")",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get load no carrier 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"content\"]).to.eq(\"Candy\");",
							"    pm.expect(pm.response.json()[\"weight\"]).to.eq(9);",
							"    pm.expect(pm.response.json()[\"transport\"]).to.eq(\"Hard\");",
							"    pm.expect(pm.response.json()).to.not.have.property(\"carrier\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/loads/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add marina 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.environment.set(\"marina_id\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Turtle Cove\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Best Coast\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Snorkling\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Turtle Cove\",\r\n  \"location\": \"Best Coast\",\r\n  \"leisure\": \"Snorkling\"\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/marinas",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas"
					]
				}
			},
			"response": []
		},
		{
			"name": "get marinas 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"At least one marina exists\", function(){",
							"   pm.expect(Object.keys(pm.response.json()).length).to.be.at.least(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/marinas",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas"
					]
				}
			},
			"response": []
		},
		{
			"name": "get single marina 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Turtle Cove\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Best Coast\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Snorkling\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "put edit marina 303",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"303 status code\", function () {",
							"    pm.response.to.have.status(303);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Goo Lagoon\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Bikini Bottom\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Tanning\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Goo Lagoon\",\r\n  \"location\": \"Bikini Bottom\",\r\n  \"leisure\": \"Tanning\"\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch edit marina 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Goo Lagoon\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Bikini Bottom\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Bodybuilding\");",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Goo Lagoon\",\r\n  \"location\": \"Bikini Bottom\",\r\n  \"leisure\": \"Bodybuilding\"\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "boat is in marina 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00b996e8-52af-4a08-8ce2-22097177a90f",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}",
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get boat marina 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Peanut\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Skipper\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    pm.expect(pm.response.json()).to.have.property(\"marina\")",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get marina boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Goo Lagoon\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Bikini Bottom\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Bodybuilding\");",
							"    pm.expect(pm.response.json()).to.have.property(\"docked\")",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "boat leaves marina 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00b996e8-52af-4a08-8ce2-22097177a90f",
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}",
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get boat marina leave 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Peanut\");",
							"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Skipper\");",
							"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
							"    pm.expect(pm.response.json()).to.not.have.property(\"marina\")",
							"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get marina boat leave 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"content is valid\", function () {",
							"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Goo Lagoon\");",
							"    pm.expect(pm.response.json()[\"location\"]).to.eq(\"Bikini Bottom\");",
							"    pm.expect(pm.response.json()[\"leisure\"]).to.eq(\"Bodybuilding\");",
							"    pm.expect(pm.response.json()).to.not.have.property(\"docked\")",
							"    const self_url = pm.environment.get(\"app_url\") + \"/marinas/\" + pm.response.json()[\"id\"];",
							"    pm.expect(pm.response.json()[\"self\"]).to.deep.equal(self_url);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete load 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"204 no content\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/loads/{{load_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{load_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat invalid JWT 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"401 invalid\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalid_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boat 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"204 no content\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boat_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boat_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete boats 405",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"405 forbidden\", function () {",
							"    pm.response.to.have.status(405);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete marina 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1b57093-74aa-4b7a-b6ae-2f66d5d54b47",
						"exec": [
							"pm.test(\"204 no content\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
				},
				"url": {
					"raw": "{{app_url}}/marinas/{{marina_id}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"marinas",
						"{{marina_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get html boats 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94ceda46-25de-4be1-becf-a55334b30052",
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{app_url}}/boats",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}